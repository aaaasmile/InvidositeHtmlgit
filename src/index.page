---
title: Home
in_menu: true
routed_title: Invido
directory_name: invido
sort_info: 0
---

<a href="{relocatable: /index.html}">[</a> Indice |
<a href="{relocatable: /index_01.html}"> 01 </a>|<a href="{relocatable: /index_02.html}"> 02 </a>|<a href="{relocatable: /index_03.html}"> 03 </a>|<a href="{relocatable: /index_04.html}"> 04 ]</a>

h2. Benvenuti su Invido.it

Questo è il sito invido.it che prende il nome dall'omonimo gioco delle carte Invido, un simpatico
gioco di carte praticato nella bassa padana.

Il sito descrive diversi software che ho sviluppato negli anni per giocare a carte 
(per esempio l'Invido, il Tressette, la Briscola, il Solitario e altri ancora).

Diversi progetti li ho messi a disposizione su "github/aaaasmile":https://github.com/aaaasmile.

h2. Nuovo blog sulla corsa: <a href="https://igorrun.invido.it">igorrun.invido.it</a>

p(data). Giovedì, 8 Maggio 2025

Ho spostato il mio blog sulla corsa su <a href="https://igorrun.invido.it">igorrun.invido.it</a>
in quanto il sito Blogspot non mi entusiasmava più. 
Mi ha sempre affascinato l'idea di avere il mio blog sul sito dell'invido.it, ma 
il dover programmare tutto il sito mi ha sempre frenato in quanto, per un blog
personale su Blogspot, non bisogna programmare nulla.  
<p>All'inizio sono partito con un generatore statico, tipo quello del sito di Zig, tanto
per provare un nuovo linguaggio di programmazione. Però qui mi sono scontrato subito con
i suoi limiti e dopo un paio di tentativi ho visto che non riuscivo a generare quello che 
che avevo in mente.</p>

<p>Così mi sono detto: <i>Sarà così difficile creare delle pagine html con un po' di 
metadata attorno?</i>. Ho guardato il formato md e ben presto mi sono accorto delle sue limitazioni.
Così ho pensato di usare html con l'aggiunta di macro mantenendo la sezione metadata come in md.
Scrivere un parser in golang per questo tipo di formato è stato abbastanza semplice, così ho
continuato con il mio generatore statico, che non deve creare tutti i siti possibili, ma solo 
il mio Blog. Vale a dire testo, galleria di immagini e link a youtube. </p>

<p>Non sono proprio delle funzionalità immediate da programmare, ma il semantic web,
nonché le nuove funzioni di css, mi hanno stimolato ad andare avanti.
La parte più ostica è stata quella che riguarda i commenti. Un generatore statico, di solito,
non supporta commenti, se non usando servizi esterni. Se devo usare un servizio esterno allora 
tanto vale lasciare il sito su Blogspot. Però usando htmx ed un semplice database sqlite sono 
riuscito ad avere un servizio di commenti molto semplice che fa al caso mio.</p>

<p> Per quanto riguarda la parte di edit del testo uso Visual Code con CSpell che funziona 
molto bene anche per l'Italiano. Il risultato è un sito per la maggior parte statico con la 
parte dinamica solo per quanto riguarda i commenti. L'unico scoglio sembra essere l'indicizzazione 
su Google che sembra rimanere ferma al palo. Qualità? I miei contenuti su Blogspot sono indicizzati 
senza problemi e visto che su <a href="https://igorrun.invido.it">igorrun.invido.it</a> sono gli 
stessi non mi sembra che sia questa la ragione. Magari Google non è così propenso ad avere 
dei contenuti uguali su un altro sito, ma visto che le pagine le ho scritte tutte io, 
non mi sembra molto gentile.</p>    

<p>Tutti i sorgenti del mio nuovo blog li trovate su <a href="https://github.com/aaaasmile/blog-corsa">github.com/aaaasmile/blog-corsa</a>.
</p>

h2. Solitario 2.3.1 versione Android

p(data). Sabato, 29 Marzo 2025

Ho pubblicato una versione del Solitario per Android.
Si trova su: "Solitario-2.3.1.apk":https://sourceforge.net/projects/solitarioita/files/Android/Solitario-2.3.1.apk/download.
I sorgenti si trovano su "github":https://github.com/aaaasmile/AndroSolitario/releases/tag/v2.3.1.

<a href="{relocatable: /images/solitario/android/photo1.png}"><img width="300" src="{relocatable: /images/solitario/android/photo1.png}"></a>
<a href="{relocatable: /images/solitario/android/photo2.png}"><img width="300" src="{relocatable: /images/solitario/android/photo2.png}"></a>


h2. Solitario 2.0.1

p(data). Lunedì, 22 Maggio 2023

<a href="{relocatable: /images/solitario/mazzo.png}"><img width="300" src="{relocatable: /images/solitario/mazzo.png}"></a>

In quest'ultimo periodo mi sono dedicato alla riscrittura del programma Solitario. 
Precedentemente ne avevo programmato due versioni differenti. 
Entrambe le versioni sono ora confluite in un unico programma denominato _Solitario_. 
Il Solitario è il classico programma che si trova in Windows ma utilizza 
le carte da briscola italiane di 40 carte. Un altro mazzo disponibile è il mazzo del Tarocco Piemontese 
composto da 56 carte.

I sorgenti, che ho sviluppato sotto Windows con msys64, 
si trovano su github al link "github.com/aaaasmile/Solitario":https://github.com/aaaasmile/Solitario. 
Il setup per Windows si trova su 
"sourceforge.net/projects/solitarioita/files/latest/download":https://sourceforge.net/projects/solitarioita/files/latest/download.

Riscrivere il programma, dopo 18 anni dalla sua prima versione, mi ha molto divertito, 
specialmente la parte in C. Mi ha sorpreso lo sviluppo del Solitario in Windows utilizzando dei tools 
che nel passato erano disponibili solo sui sistemi Linux (gcc, make, CMake, ninja e compagnia.). 

Ho aggiunto anche un punteggio che premia i più veloci nel risolvere il solitario. 
Un più alto punteggio teorico può essere raggiunto usando il mazzo da 56 carte. 
Però, con il mazzo da 40 carte si raggiunge la soluzione più velocemente. 
Il tempo è un fattore importante che ha una grande influenza sul punteggio finale. 
Un punteggio superiore ai 6000 punti merita sicuramente uno screenshot da inviare al sito 
(vedi "Autore":Igor-sarzi-sartori.html).  
Buon divertimento! 

h2. TTGO ed emulatore NES

p(data). Sabato, 19 Febbraio 2022

<a href="{relocatable: /images/esp32/img400.png}"><img width="300" src="{relocatable: /images/esp32/img400.png}"></a>

Una delle piacevoli novità di quest'ultimo periodo è  provare a giocare con dei microcontroller che hanno 
ormai una capacità di calcolo molto vicina a quelli dei personal computer di qualche decina d'anni fa. 
Se però un computer Intel 486, il mio primo personal computer, trentasette anni fa costava 
come un mese e mezzo di uno stipendio da operaio, ora un microcontroller costa quanto una birra media. 
Mancano un po' di periferie, ma la sostanza non cambia: i prezzi, a parità d calcolo, sono molto bassi. 
Tra i diversi dispositivi che ho, il TTGO è uno di quelli più divertenti. È un microcontroller ESP32 
con integrato un mini display e porta USB per la programmazione. Penso di averlo pagato intorno ai 14 euro, 
ma i prezzi sono abbastanza instabili. Con un po' di voglia di provare diversi software e giocare con una 
basetta sono riuscito a fare andare un emulatore NES con qualche classico gioco tipo pacman, invaders 
e altri ancora. 

Il codice, che ho dovuto adattare un po', si trova su 
"github.com/aaaasmile/TTGO-Nes-Cup":https://github.com/aaaasmile/TTGO-Nes-Cup. 
Per quanto riguarda i componenti usati essi sono:

 * TTGO T-Display ESP32 microcontroller

 * PAM8302A amplificatore audio

 * 5 resistenze da 10K

 * 8 pulsanti

 * 1 altoparlante 0.5W

I collegamenti sono visibili nelle foto presenti su 
"github.com/aaaasmile/TTGO-Nes-Cup/doc":https://github.com/aaaasmile/TTGO-Nes-Cup/tree/main/doc
che sono sei porte GPIO per i pulsanti e 2 per l'audio.

Qualche nota che ho scritto durante lo sviluppo si trova 
"qui":https://github.com/aaaasmile/TTGO-Nes-Cup/blob/main/passaggi.md

 

<a href="{relocatable: /index.html}">[</a> Indice |
<a href="{relocatable: /index_01.html}"> 01 </a>|<a href="{relocatable: /index_02.html}"> 02 </a>|<a href="{relocatable: /index_03.html}"> 03 </a>|<a href="{relocatable: /index_04.html}"> 04 ]</a>

